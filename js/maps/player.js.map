{"version":3,"names":[],"mappings":"","sources":["player.js"],"sourcesContent":["\nvar Player = {\n    currentSong: {\n        obj: null,\n        //artworkSet: false,\n        fromSearch: false,\n        id: null\n    },\n    lastId: null,\n    setSong: function(options) {\n        this.currentSong = options;\n    },\n    setVolume: function(val) {\n        this.currentSong.obj.volume = val;\n    },\n    paused: function() {\n        return this.currentSong.obj.paused;\n    },\n    play: function(callback) {\n        this.stopAll();\n        this.currentSong.obj.play();\n        if (callback !== null) {\n            callback();\n        }\n    },\n    pause: function(callback) {\n        this.currentSong.obj.pause();\n        if (callback !== null) {\n            callback();\n        }\n    },\n    next: function() {\n        this.lastId = this.currentSong.id;\n        //this.currentSong.artworkSet = false;\n\n        var self = this;\n\n        if (!$($(this.currentSong.obj).parent().next().find('audio')[0]).length) {\n            loadMore(function() {\n                self.currentSong.obj = $(self.currentSong.obj).parent().next().find('audio')[0];\n                self.currentSong.id = $(self.currentSong.obj).attr('id');\n                self.play(null);\n            });\n        } else {\n            this.currentSong.obj = $(this.currentSong.obj).parent().next().find('audio')[0];\n            this.currentSong.id = $(this.currentSong.obj).attr('id');\n            this.play(null);\n        }\n\n\n    },\n    prev: function() {\n        this.lastId = this.currentSong.id;\n        this.currentSong.artworkSet = false;\n        this.currentSong.obj = $(this.currentSong.obj).parent().prev().find('audio')[0];\n        this.currentSong.id = $(this.currentSong.obj).attr('id');\n        this.play(null);\n    },\n    stopAll: function() {\n        $('audio').not($(this.currentSong.obj)).each(function(index, audio) { //\n            audio.pause();\n            audio.currentTime = 0;\n        });\n    }\n};\n\nfunction getAssetExtension() {\n    return svgeezy.supportsSvg() ? '.svg' : '.png';\n}\n\nfunction switchToPauseState(parent) {\n    $(parent).find('.play-button .icon').attr('src', 'assets/pause_glyph' + getAssetExtension());\n}\n\nfunction switchToPlayState(parent) {\n    $(parent).find('.play-button .icon').attr('src', 'assets/play_glyph' + getAssetExtension());\n}\n\nfunction changeVolume(volume) {\n    if (Player.currentSong.obj !== null) {\n        Player.setVolume(volume);\n    }\n}\n\nvar sideMenu = $('.side-menu');\n\nfunction resetArtwork() {\n    sideMenu.find('.artwork').first().attr('src', 'assets/artwork_thumb.png');\n    Player.currentSong.artworkSet = false;\n}\n\nfunction toggleCurrentAudio() {\n    if (Player.paused()) {\n        Player.play(function() {});\n        Player.setVolume(slider.value());\n    } else {\n        Player.pause(function() {});\n    }\n}\n\n$(document)\n\n    .on('click', '.song-container .play-button', function() {\n\n        var obj = $(this).parent().find('audio')[0];\n        var id = $(obj).attr('id');\n        var searchResult = $(this).parent().hasClass('search-result');\n\n        Player.setSong({\n            obj: obj,\n            id: id,\n            fromSearch: searchResult\n        });\n\n        toggleCurrentAudio();\n\n    })\n\n    .on('click', '.side-menu .play-button', function() {\n        toggleCurrentAudio();\n    })\n\n    .on('click', '.side-menu .prev-button, .side-menu .next-button', function() {\n\n        if ($(this).attr('class') === 'prev-button') {\n            Player.prev();\n        } else {\n            Player.next();\n        }\n\n    })\n\n    .on('click', '.cookies-warning .close-button', function() {\n        $(this).parent().hide(200);\n    })\n\n    .ready(function() {\n\n        svgeezy.init();\n\n        setTimeout(function() {\n            $('.cookies-warning').show(200);\n        }, 1000);\n\n        bindEvents();\n        $('.search-field').val('');\n        $('.menu-switcher').prop('checked', false);\n\n        setTimeout(function() {\n            $('.cookies-warning').hide(200);\n        }, 15000);\n\n        slider.onchange(changeVolume);\n        slider.value(0.6);\n\n    });\n\nfunction bindEvents() {\n\n    $('audio')\n        .on('pause', function() {\n            switchToPlayState($(this).parent());\n            switchToPlayState(sideMenu);\n        })\n\n        .on('play', function() {\n\n            this.volume = slider.value();\n\n            switchToPauseState($(Player.currentSong.obj).parent());\n            switchToPauseState(sideMenu);\n\n            var trackObj = [\n                $(this).parent().find('.info-wrapper .artist').first().text(),\n                $(this).parent().find('.info-wrapper .title').first().text()\n            ];\n\n            $('title').text(trackObj.join(' - ') + ' ');\n\n            sideMenu.find('.title').first().text(trackObj[1]);\n            sideMenu.find('.artist').first().text(trackObj[0]);\n\n            if (!Player.currentSong.artworkSet) {\n                setArtworkURL(trackObj.join(' '));\n                Player.currentSong.artworkSet = true;\n            }\n\n        })\n\n        .on('timeupdate', function() {\n            var self = $(this);\n            var parent = self.parent();\n\n            var playProgressCont = parent.find('.play-progress');\n            var playedPercentage = (this.currentTime / this.duration) * 100;\n\n            playProgressCont.css('width', playedPercentage + '%');\n\n            if (this.currentTime >= this.duration) {\n                resetArtwork();\n                Player.next();\n            }\n\n        })\n\n        .on('progress', function() {\n\n            if (this.readyState === 4) {\n                var self = $(this);\n                var parent = self.parent();\n                var cacheProgressCont = parent.find('.cache-progress');\n                var loadedPercentage = (this.buffered.end(0) / this.duration) * 100;\n\n                cacheProgressCont.css('width', loadedPercentage + '%');\n            }\n\n        });\n\n}\n\nfunction AJAXRequestPOST(URL, data, callback) {\n    $.ajax({\n        type: 'POST',\n        url: URL,\n        data: data,\n        success: callback\n    });\n}\n\nfunction setArtworkURL(term) {\n    resetArtwork();\n    return AJAXRequestPOST('ajax_artwork.php', 'term=' + term, function(URL) {\n        $('.artwork').attr('src', URL);\n    });\n}\n\nvar canLoadMore = true;\n\n$('.search-field')\n    .on('input', function(e) {\n\n        if (this.value === '') {\n            $('.search-result').remove();\n            $('.song-container').show();\n            canLoadMore =  true;\n        } else {\n            canLoadMore = false;\n            $('.search-result').remove();\n            $('.song-container').hide();\n            $('.loader').hide();\n\n            setTimeout(AJAXRequestPOST('ajax_search.php', 'query=' + this.value, function(html) {\n                $('.playlist').append(html);\n                bindEvents();\n            }), 2000);\n\n        }\n\n    })\n\n    .on('keyup keypress', function(e) {\n        var keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            e.preventDefault();\n            return false;\n        }\n    });\n\n// var offset = 0;\n//\n// $(window).scroll(function() {\n//     if ($(document).height() <= $(window).scrollTop() + $(window).height() && canLoadMore) {\n//         loadMore(null);\n//     }\n// });\n//\n// function loadMore(callback) {\n//     $('.loader').show();\n//     offset += 30;\n//\n//     AJAXRequestPOST('ajax_more.php', 'offset=' + offset, function(html) {\n//         $('.loader').hide().remove();\n//         $('.playlist').append(html);\n//         bindEvents();\n//         if (callback !== null) {\n//             callback();\n//         }\n//     });\n//\n// }\n\n\n\n\n\n\n"],"file":"player.js","sourceRoot":"/source/"}