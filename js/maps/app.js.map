{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["var app = angular.module('vplayer', []);\n\napp.controller('AppController', function($scope, $rootScope) {\n\n    VK.Auth.getLoginStatus(function(response) {\n        if (response.status === 'connected') {\n            $rootScope.$emit('vkResponded', response.session.mid);\n            $rootScope.$apply(function() {\n                $rootScope.vkUserAuthorized = true;\n            });\n        } else {\n            console.log('User not authorized');\n            $rootScope.$apply(function() {\n                $rootScope.vkUserAuthorized = false;\n            });\n        }\n    });\n});\n\napp.controller('AuthController', function($scope, $rootScope) {\n\n    $scope.auth = function() {\n        VK.Auth.login(function(response) {\n            if (response.status === 'connected') {\n                $rootScope.$emit('vkResponded', response.session.mid);\n                $rootScope.$apply(function() {\n                    $rootScope.vkUserAuthorized = true;\n                });\n            } else {\n                console.log('User not authorized. Abort.');\n            }\n        }, 65536 + 8);\n    };\n\n});\n\napp.controller('PlayerController', function($scope, $rootScope, $sce, $element, $http) {\n\n    $scope.api = VK.Api;\n\n    $scope.tracks = [];\n\n    $scope.audioOffset = 0;\n    $scope.audioLoading = true;\n\n    $scope.npAid = -1;\n    $scope.npTrack = undefined;\n\n    $scope.npElem = undefined;\n    $scope.audioElem = $element[0].querySelector('audio');\n    $scope.sideMenuElem = $element[0].querySelector('.side-menu')\n    $scope.volumeSlider = slider;\n    $scope.volumeSlider.value(0.65);\n\n    $scope.volumeSlider.onchange(function(volume) {\n        $scope.audioElem.volume = volume;\n    });\n\n    $scope.$watch('npElem', function(newVal, oldVal) {\n        //console.log('changed ' + newVal);\n        if (typeof oldVal !== 'undefined') {\n            var npcImg = oldVal.querySelector('.play-button .icon');\n            npcImg.src = 'assets/play_glyph' + $scope.getAssetExtension();\n            var npProgress = oldVal.querySelector('.play-progress');\n            angular.element(npProgress).css('width', '0');\n        }\n        $scope.npElem = newVal;\n    });\n\n    $scope.$watch('npTrack', function(newVal, oldVal) {\n        $scope.npTrack = newVal;\n    });\n\n    $scope.setArtwork = function(term, country) {\n\n        country = country || 'RU';\n\n        var smArtwork = $scope.sideMenuElem.querySelector('.artwork');\n\n        $http\n            .jsonp('https://itunes.apple.com/search', {\n                params: {\n                    \"callback\": \"JSON_CALLBACK\",\n                    \"term\": term,\n                    \"country\": country\n                },\n                paramsSerializer: function(param) {\n                    return encodeURIComponent(param);\n                }\n            })\n            .success(function(response) {\n                if (response.resultCount === 0) {\n                    smArtwork.src = 'assets/artwork_thumb.png';\n                } else {\n                    smArtwork.src = response.results[0].artworkUrl100.replace('100x100', '500x500');\n                }\n            });\n\n    };\n\n    $scope.nextTrack = function() {\n        var npTrackInstance = $scope.tracks.filter(function(t) {\n            return t.aid === $scope.npTrack.aid;\n        })[0];\n        var index = $scope.tracks.indexOf(npTrackInstance);\n\n        if (index !== $scope.tracks.length - 1) {\n            $scope.toggleAudio($scope.tracks[index + 1], $scope.npElem.nextElementSibling);\n        } else {\n            $scope.loadAudio(function() {\n                $scope.toggleAudio($scope.tracks[index + 1], $scope.npElem.nextElementSibling);\n            });\n        }\n\n    };\n\n    $scope.prevTrack = function() {\n        var npTrackInstance = $scope.tracks.filter(function(t) {\n            return t.aid === $scope.npTrack.aid;\n        })[0];\n        var index = $scope.tracks.indexOf(npTrackInstance);\n        if (index !== 0) {\n            $scope.toggleAudio($scope.tracks[index - 1], $scope.npElem.previousElementSibling);\n        }\n\n    };\n\n    $scope.toggleAudio = function(track, container) {\n\n        $scope.npElem = container || $scope.npElem;\n        $scope.npTrack = track || $scope.npTrack;\n\n        if ($scope.npAid === $scope.npTrack.aid) {\n\n            if (!$scope.audioElem.paused) {\n                $scope.audioElem.pause();\n            } else {\n                $scope.audioElem.play();\n            }\n\n        } else {\n\n            $scope.sideMenuElem.querySelector('.artwork').src = 'assets/artwork_thumb.png';\n            $scope.sideMenuElem.querySelector('.title').innerText = $scope.npTrack.title;\n            $scope.sideMenuElem.querySelector('.artist').innerText = $scope.npTrack.artist;\n            $scope.npAid = $scope.npTrack.aid;\n            $scope.audioElem.src = $sce.trustAsHtml($scope.npTrack.url);\n            $scope.audioElem.play();\n            $scope.setArtwork($scope.npTrack.artist + ' ' + $scope.npTrack.title);\n\n        }\n    };\n\n    $scope.loadAudio = function(callback) {\n        //console.log($scope.audioOffset);\n        $scope.api.call('audio.get', {\n            offset: $scope.audioOffset,\n            count: 30,\n            user_id: $scope.user.id\n        }, function(r) {\n            $scope.$apply(function() {\n                for (track in r.response) {\n                    var newTrack = r.response[track];\n                    $scope.tracks.push(newTrack);\n                }\n                $scope.audioOffset += 30;\n                $scope.audioLoading = false;\n            });\n            callback = callback || function(){};\n            callback();\n        });\n    };\n\n    $scope.getAssetExtension = function() {\n        return svgeezy.supportsSvg() ? '.svg' : '.png';\n    };\n\n    $rootScope.$on('vkResponded', function(e, id) {\n        $scope.api.call('users.get', {\n            user_ids: id,\n            fields: 'uid,photo_100,first_name,last_name,screen_name'\n        }, function(r) {\n            $scope.$apply(function() {\n                var userData = r.response[0];\n                $scope.user = {\n                    id: id,\n                    href: 'https://vk.com/' + userData.screen_name,\n                    photoUrl: userData.photo_100,\n                    firstName: userData.first_name,\n                    lastName: userData.last_name\n                };\n                $scope.loadAudio();\n            });\n        });\n    });\n\n    $scope.logout = function() {\n        VK.Auth.logout(function() {\n            console.log('User logged out.');\n            $rootScope.$apply(function() {\n                $rootScope.vkUserAuthorized = false;\n            });\n        })\n    };\n});\n\napp.directive('ngPlayer', function() {\n    return {\n       restrict: 'A',\n       controller: function($scope, $element, $attrs) {\n           //console.log($scope);\n           $element.bind('play', function() {\n               var pauseGlyph = 'assets/pause_glyph' + $scope.getAssetExtension();\n               var npcIcon = $scope.npElem.querySelector('.play-button .icon');\n               var smIcon = $scope.sideMenuElem.querySelector('.play-button .icon');\n               npcIcon.src = pauseGlyph;\n               smIcon.src = pauseGlyph;\n           });\n\n           $element.bind('pause', function() {\n               var playGlyph = 'assets/play_glyph' + $scope.getAssetExtension();\n               var npcIcon = $scope.npElem.querySelector('.play-button .icon');\n               var smIcon = $scope.sideMenuElem.querySelector('.play-button .icon');\n               npcIcon.src = playGlyph;\n               smIcon.src = playGlyph;\n           });\n\n           $element.bind('progress', function() {\n               if (this.readyState === 4) {\n                   var cacheProgressCont = $scope.npElem.querySelector('.cache-progress');\n                   var loadedPercentage = (this.buffered.end(0) / this.duration) * 100;\n                   angular.element(cacheProgressCont).css('width', loadedPercentage + '%');\n               }\n           });\n\n           $element.bind('timeupdate', function() {\n\n               var playProgressCont = $scope.npElem.querySelector('.play-progress');\n               var playedPercentage = (this.currentTime / this.duration) * 100;\n               angular.element(playProgressCont).css('width', playedPercentage + '%');\n\n           });\n\n       }\n    }\n});\n\napp.directive('ngTrack', function() {\n    return {\n        scope: true,\n        restrict: 'A',\n        link: function($scope, $element, $attrs) {\n            $scope.toggle = function() {\n                $scope.$parent.toggleAudio($scope.track, $element[0]);\n            };\n        },\n        templateUrl: 'templates/track.html',\n        replace: true\n    }\n});\n\napp.directive('ngToBottom', function($window, $timeout) {\n    return {\n        restrict: 'A',\n        link: function(scope, elem, attrs) {\n            var promise;\n            angular.element($window).bind('scroll', function() {\n                if (this.scrollY + this.innerHeight >= document.body.scrollHeight) {\n                    $timeout.cancel(promise);\n                    promise = $timeout(function() {\n                        scope.audioLoading = true;\n                        scope.$apply(attrs.ngToBottom);\n                    }, 60);\n                }\n            });\n        }\n    }\n});\n\napp.directive('ngBind', function(){\n    return {\n        compile: function(elem, attrs) {\n            attrs.ngBind += '|decode';\n        }\n    };\n});\n\napp.filter('decode', function() {\n    return function(text) {\n        return angular.element('<div>' + text + '</div>').text();\n    };\n});\n\n\n\n"],"file":"app.js","sourceRoot":"/source/"}